// Code generated by ent, DO NOT EDIT.

package userconfig

const (
	// Label holds the string label denoting the userconfig type in the database.
	Label = "user_config"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldRank holds the string denoting the rank field in the database.
	FieldRank = "rank"
	// FieldWorking holds the string denoting the working field in the database.
	FieldWorking = "working"
	// FieldBreak holds the string denoting the break field in the database.
	FieldBreak = "break"
	// EdgeUsers holds the string denoting the users edge name in mutations.
	EdgeUsers = "users"
	// Table holds the table name of the userconfig in the database.
	Table = "user_configs"
	// UsersTable is the table that holds the users relation/edge.
	UsersTable = "user_configs"
	// UsersInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UsersInverseTable = "users"
	// UsersColumn is the table column denoting the users relation/edge.
	UsersColumn = "user_id"
)

// Columns holds all SQL columns for userconfig fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldRank,
	FieldWorking,
	FieldBreak,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
