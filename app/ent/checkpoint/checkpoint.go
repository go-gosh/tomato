// Code generated by ent, DO NOT EDIT.

package checkpoint

import (
	"time"
)

const (
	// Label holds the string label denoting the checkpoint type in the database.
	Label = "checkpoint"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPoint holds the string denoting the point field in the database.
	FieldPoint = "point"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// FieldDetail holds the string denoting the detail field in the database.
	FieldDetail = "detail"
	// FieldCheckTime holds the string denoting the check_time field in the database.
	FieldCheckTime = "check_time"
	// EdgeTask holds the string denoting the task edge name in mutations.
	EdgeTask = "task"
	// Table holds the table name of the checkpoint in the database.
	Table = "checkpoints"
	// TaskTable is the table that holds the task relation/edge.
	TaskTable = "checkpoints"
	// TaskInverseTable is the table name for the Task entity.
	// It exists in this package in order to avoid circular dependency with the "task" package.
	TaskInverseTable = "tasks"
	// TaskColumn is the table column denoting the task relation/edge.
	TaskColumn = "task_checkpoints"
)

// Columns holds all SQL columns for checkpoint fields.
var Columns = []string{
	FieldID,
	FieldPoint,
	FieldContent,
	FieldDetail,
	FieldCheckTime,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "checkpoints"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"task_checkpoints",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// ContentValidator is a validator for the "content" field. It is called by the builders before save.
	ContentValidator func(string) error
	// DetailValidator is a validator for the "detail" field. It is called by the builders before save.
	DetailValidator func(string) error
	// DefaultCheckTime holds the default value on creation for the "check_time" field.
	DefaultCheckTime func() time.Time
)
